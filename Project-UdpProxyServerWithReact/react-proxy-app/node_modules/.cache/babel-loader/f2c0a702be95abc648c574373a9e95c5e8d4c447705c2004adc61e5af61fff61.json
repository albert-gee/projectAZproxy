{"ast":null,"code":"var _jsxFileName = \"K:\\\\+main_repo\\\\school\\\\CST_Degree_BScACS\\\\comp7005-Computer_Networks_And_Protocols\\\\workspace\\\\Project-UdpProxyServerWithReact\\\\react-proxy-app\\\\src\\\\Components\\\\UDPComponent.js\",\n  _s = $RefreshSig$();\n// UDPComponent.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UDPComponent = ({\n  localPort,\n  proxyHost,\n  proxyPort,\n  direction,\n  sourceToTargetLoss,\n  targetToSourceLoss,\n  sourceDelay,\n  targetDelay\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const socket = new WebSocket(`ws://${proxyHost}:${proxyPort}`);\n  useEffect(() => {\n    socket.addEventListener('message', event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'message' && data.direction === direction) {\n        setMessages(prevMessages => [...prevMessages, data.content]);\n      }\n    });\n    return () => {\n      socket.close();\n    };\n  }, [socket, direction]);\n  useEffect(() => {\n    const sendSettings = () => {\n      const settings = {\n        type: 'settings',\n        direction,\n        sourceToTargetLoss,\n        targetToSourceLoss,\n        sourceDelay,\n        targetDelay\n      };\n      socket.send(JSON.stringify(settings));\n    };\n    sendSettings(); // Send settings on initial render\n\n    // Send settings whenever they change\n    const timeoutId = setTimeout(() => {\n      sendSettings();\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [socket, sourceToTargetLoss, targetToSourceLoss, sourceDelay, targetDelay, direction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [direction === 'source' ? 'Source' : 'Target', \" Box (Local Port: \", localPort, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(UDPComponent, \"BxyhfWWpnSbijcu7qFgrB+X/mWM=\");\n_c = UDPComponent;\nexport default UDPComponent;\nvar _c;\n$RefreshReg$(_c, \"UDPComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UDPComponent","localPort","proxyHost","proxyPort","direction","sourceToTargetLoss","targetToSourceLoss","sourceDelay","targetDelay","_s","messages","setMessages","socket","WebSocket","addEventListener","event","data","JSON","parse","type","prevMessages","content","close","sendSettings","settings","send","stringify","timeoutId","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","_c","$RefreshReg$"],"sources":["K:/+main_repo/school/CST_Degree_BScACS/comp7005-Computer_Networks_And_Protocols/workspace/Project-UdpProxyServerWithReact/react-proxy-app/src/Components/UDPComponent.js"],"sourcesContent":["// UDPComponent.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst UDPComponent = ({\r\n  localPort,\r\n  proxyHost,\r\n  proxyPort,\r\n  direction,\r\n  sourceToTargetLoss,\r\n  targetToSourceLoss,\r\n  sourceDelay,\r\n  targetDelay,\r\n}) => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const socket = new WebSocket(`ws://${proxyHost}:${proxyPort}`);\r\n\r\n  useEffect(() => {\r\n    socket.addEventListener('message', (event) => {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.type === 'message' && data.direction === direction) {\r\n        setMessages((prevMessages) => [...prevMessages, data.content]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, [socket, direction]);\r\n\r\n  useEffect(() => {\r\n    const sendSettings = () => {\r\n      const settings = {\r\n        type: 'settings',\r\n        direction,\r\n        sourceToTargetLoss,\r\n        targetToSourceLoss,\r\n        sourceDelay,\r\n        targetDelay,\r\n      };\r\n      socket.send(JSON.stringify(settings));\r\n    };\r\n\r\n    sendSettings(); // Send settings on initial render\r\n\r\n    // Send settings whenever they change\r\n    const timeoutId = setTimeout(() => {\r\n      sendSettings();\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [socket, sourceToTargetLoss, targetToSourceLoss, sourceDelay, targetDelay, direction]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{direction === 'source' ? 'Source' : 'Target'} Box (Local Port: {localPort})</h2>\r\n      <div>\r\n        <h3>Received Messages:</h3>\r\n        <ul>\r\n          {messages.map((msg, index) => (\r\n            <li key={index}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UDPComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}