{"ast":null,"code":"var _jsxFileName = \"K:\\\\+main_repo\\\\school\\\\CST_Degree_BScACS\\\\comp7005-Computer_Networks_And_Protocols\\\\workspace\\\\Project-UdpProxyServerWithReact\\\\react-proxy-app\\\\src\\\\Components\\\\UDPComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UDPComponent = ({\n  localPort,\n  direction\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [sourceToTargetLoss, setSourceToTargetLoss] = useState(0.2);\n  const [targetToSourceLoss, setTargetToSourceLoss] = useState(0.2);\n  const [sourceDelay, setSourceDelay] = useState(0);\n  const [targetDelay, setTargetDelay] = useState(0);\n  useEffect(() => {\n    // Simulate receiving messages from the server\n\n    // You may need to adjust this part based on how the server sends messages\n    const receiveMessage = data => {\n      if (data.type === 'message' && data.direction === direction) {\n        setMessages(prevMessages => [...prevMessages, data.content]);\n      }\n    };\n\n    // Attach a listener for messages (simulated)\n    // You may need to replace this with your actual communication method\n    const messageHandler = event => {\n      const data = JSON.parse(event.data);\n      receiveMessage(data);\n    };\n\n    // Attach the listener\n    // You may need to replace this with your actual communication method\n    // For example, if you use WebSocket, attach the listener to WebSocket events\n    // socket.addEventListener('message', messageHandler);\n\n    // Clean up the listener on component unmount\n    return () => {\n      // You may need to replace this with your actual communication method\n      // For example, if you use WebSocket, remove the listener from WebSocket events\n      // socket.removeEventListener('message', messageHandler);\n    };\n  }, [direction]);\n  useEffect(() => {\n    // Simulate sending settings to the server\n\n    // You may need to adjust this part based on how the server receives settings\n    const sendSettings = () => {\n      const settings = {\n        type: 'settings',\n        direction,\n        sourceToTargetLoss,\n        targetToSourceLoss,\n        sourceDelay,\n        targetDelay\n      };\n\n      // You may need to replace this with your actual communication method\n      // For example, if you use WebSocket, send the settings using WebSocket\n      // socket.send(JSON.stringify(settings));\n    };\n\n    // Send settings on initial render\n    sendSettings();\n\n    // Send settings whenever they change\n    const timeoutId = setTimeout(() => {\n      sendSettings();\n    }, 500);\n\n    // Clean up the timeout on component unmount\n    return () => clearTimeout(timeoutId);\n  }, [sourceToTargetLoss, targetToSourceLoss, sourceDelay, targetDelay, direction]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [direction === 'source' ? 'Source' : 'Target', \" Box (Local Port: \", localPort, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Source to Target Loss:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sourceToTargetLoss,\n          onChange: e => setSourceToTargetLoss(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Target to Source Loss:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetToSourceLoss,\n          onChange: e => setTargetToSourceLoss(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Source Delay (ms):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sourceDelay,\n          onChange: e => setSourceDelay(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Target Delay (ms):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: targetDelay,\n          onChange: e => setTargetDelay(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(UDPComponent, \"nZIlpq+VBtdZs4jZ8JSHqyjto7M=\");\n_c = UDPComponent;\nexport default UDPComponent;\nvar _c;\n$RefreshReg$(_c, \"UDPComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UDPComponent","localPort","direction","_s","messages","setMessages","sourceToTargetLoss","setSourceToTargetLoss","targetToSourceLoss","setTargetToSourceLoss","sourceDelay","setSourceDelay","targetDelay","setTargetDelay","receiveMessage","data","type","prevMessages","content","messageHandler","event","JSON","parse","sendSettings","settings","timeoutId","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","value","onChange","e","parseFloat","target","parseInt","_c","$RefreshReg$"],"sources":["K:/+main_repo/school/CST_Degree_BScACS/comp7005-Computer_Networks_And_Protocols/workspace/Project-UdpProxyServerWithReact/react-proxy-app/src/Components/UDPComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UDPComponent = ({ localPort, direction }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [sourceToTargetLoss, setSourceToTargetLoss] = useState(0.2);\r\n  const [targetToSourceLoss, setTargetToSourceLoss] = useState(0.2);\r\n  const [sourceDelay, setSourceDelay] = useState(0);\r\n  const [targetDelay, setTargetDelay] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Simulate receiving messages from the server\r\n\r\n    // You may need to adjust this part based on how the server sends messages\r\n    const receiveMessage = (data) => {\r\n      if (data.type === 'message' && data.direction === direction) {\r\n        setMessages((prevMessages) => [...prevMessages, data.content]);\r\n      }\r\n    };\r\n\r\n    // Attach a listener for messages (simulated)\r\n    // You may need to replace this with your actual communication method\r\n    const messageHandler = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      receiveMessage(data);\r\n    };\r\n\r\n    // Attach the listener\r\n    // You may need to replace this with your actual communication method\r\n    // For example, if you use WebSocket, attach the listener to WebSocket events\r\n    // socket.addEventListener('message', messageHandler);\r\n\r\n    // Clean up the listener on component unmount\r\n    return () => {\r\n      // You may need to replace this with your actual communication method\r\n      // For example, if you use WebSocket, remove the listener from WebSocket events\r\n      // socket.removeEventListener('message', messageHandler);\r\n    };\r\n  }, [direction]);\r\n\r\n  useEffect(() => {\r\n    // Simulate sending settings to the server\r\n\r\n    // You may need to adjust this part based on how the server receives settings\r\n    const sendSettings = () => {\r\n      const settings = {\r\n        type: 'settings',\r\n        direction,\r\n        sourceToTargetLoss,\r\n        targetToSourceLoss,\r\n        sourceDelay,\r\n        targetDelay,\r\n      };\r\n\r\n      // You may need to replace this with your actual communication method\r\n      // For example, if you use WebSocket, send the settings using WebSocket\r\n      // socket.send(JSON.stringify(settings));\r\n    };\r\n\r\n    // Send settings on initial render\r\n    sendSettings();\r\n\r\n    // Send settings whenever they change\r\n    const timeoutId = setTimeout(() => {\r\n      sendSettings();\r\n    }, 500);\r\n\r\n    // Clean up the timeout on component unmount\r\n    return () => clearTimeout(timeoutId);\r\n  }, [sourceToTargetLoss, targetToSourceLoss, sourceDelay, targetDelay, direction]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{direction === 'source' ? 'Source' : 'Target'} Box (Local Port: {localPort})</h2>\r\n      <div>\r\n        <h3>Received Messages:</h3>\r\n        <ul>\r\n          {messages.map((msg, index) => (\r\n            <li key={index}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Settings:</h3>\r\n        <label>\r\n          Source to Target Loss:\r\n          <input\r\n            type=\"number\"\r\n            value={sourceToTargetLoss}\r\n            onChange={(e) => setSourceToTargetLoss(parseFloat(e.target.value))}\r\n          />\r\n        </label>\r\n        <label>\r\n          Target to Source Loss:\r\n          <input\r\n            type=\"number\"\r\n            value={targetToSourceLoss}\r\n            onChange={(e) => setTargetToSourceLoss(parseFloat(e.target.value))}\r\n          />\r\n        </label>\r\n        <label>\r\n          Source Delay (ms):\r\n          <input\r\n            type=\"number\"\r\n            value={sourceDelay}\r\n            onChange={(e) => setSourceDelay(parseInt(e.target.value))}\r\n          />\r\n        </label>\r\n        <label>\r\n          Target Delay (ms):\r\n          <input\r\n            type=\"number\"\r\n            value={targetDelay}\r\n            onChange={(e) => setTargetDelay(parseInt(e.target.value))}\r\n          />\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UDPComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}