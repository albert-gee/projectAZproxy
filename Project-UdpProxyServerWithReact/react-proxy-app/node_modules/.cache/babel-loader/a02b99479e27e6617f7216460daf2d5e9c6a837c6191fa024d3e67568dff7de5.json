{"ast":null,"code":"var _jsxFileName = \"K:\\\\+main_repo\\\\school\\\\CST_Degree_BScACS\\\\comp7005-Computer_Networks_And_Protocols\\\\workspace\\\\Project-UdpProxyServerWithReact\\\\react-proxy-app\\\\src\\\\Components\\\\UDPComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UDPComponent = ({\n  localPort,\n  direction,\n  sharedWebSocket\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loss, setLoss] = useState(0.2);\n  const [delay, setDelay] = useState(0);\n  useEffect(() => {\n    sharedWebSocket.addEventListener(\"open\", () => {\n      console.log(\"WebSocket connection opened\");\n    });\n    sharedWebSocket.addEventListener(\"message\", event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"message\" && data.direction === direction) {\n        setMessages(prevMessages => [...prevMessages, data.content]);\n      }\n    });\n    return () => {\n      // Don't close the sharedWebSocket here to keep it open for other components\n    };\n  }, [direction, sharedWebSocket]);\n  useEffect(() => {\n    const sendSettings = () => {\n      if (sharedWebSocket.readyState === WebSocket.OPEN) {\n        const settings = {\n          type: \"settings\",\n          direction,\n          sourceToTargetLoss: loss,\n          targetToSourceLoss: loss,\n          sourceDelay: delay,\n          targetDelay: delay\n        };\n        sharedWebSocket.send(JSON.stringify(settings));\n      } else if (sharedWebSocket.readyState === WebSocket.CONNECTING) {\n        // If the WebSocket is still connecting, wait and retry\n        setTimeout(sendSettings, 100);\n      } else {\n        console.error(\"WebSocket connection not open\");\n      }\n    };\n    sendSettings(); // Send settings on initial render\n\n    // Send settings whenever they change\n    const timeoutId = setTimeout(() => {\n      sendSettings();\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [loss, delay, direction, sharedWebSocket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UDPComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [direction === \"source\" ? \"Source\" : \"Target\", \" Box (Local Port:\", \" \", localPort, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"UDPComponentSettings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Settings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Loss:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: loss,\n          onChange: e => setLoss(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Delay (ms):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: delay,\n          onChange: e => setDelay(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"MessageBox\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UDPComponent, \"Od1shGQTA92Bozvanez4l7jbC70=\");\n_c = UDPComponent;\nexport default UDPComponent;\nvar _c;\n$RefreshReg$(_c, \"UDPComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UDPComponent","localPort","direction","sharedWebSocket","_s","messages","setMessages","loss","setLoss","delay","setDelay","addEventListener","console","log","event","data","JSON","parse","type","prevMessages","content","sendSettings","readyState","WebSocket","OPEN","settings","sourceToTargetLoss","targetToSourceLoss","sourceDelay","targetDelay","send","stringify","CONNECTING","setTimeout","error","timeoutId","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseFloat","target","parseInt","map","msg","index","_c","$RefreshReg$"],"sources":["K:/+main_repo/school/CST_Degree_BScACS/comp7005-Computer_Networks_And_Protocols/workspace/Project-UdpProxyServerWithReact/react-proxy-app/src/Components/UDPComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst UDPComponent = ({ localPort, direction, sharedWebSocket }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loss, setLoss] = useState(0.2);\r\n  const [delay, setDelay] = useState(0);\r\n\r\n  useEffect(() => {\r\n    sharedWebSocket.addEventListener(\"open\", () => {\r\n      console.log(\"WebSocket connection opened\");\r\n    });\r\n\r\n    sharedWebSocket.addEventListener(\"message\", (event) => {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.type === \"message\" && data.direction === direction) {\r\n        setMessages((prevMessages) => [...prevMessages, data.content]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      // Don't close the sharedWebSocket here to keep it open for other components\r\n    };\r\n  }, [direction, sharedWebSocket]);\r\n\r\n  useEffect(() => {\r\n    const sendSettings = () => {\r\n      if (sharedWebSocket.readyState === WebSocket.OPEN) {\r\n        const settings = {\r\n          type: \"settings\",\r\n          direction,\r\n          sourceToTargetLoss: loss,\r\n          targetToSourceLoss: loss,\r\n          sourceDelay: delay,\r\n          targetDelay: delay,\r\n        };\r\n        sharedWebSocket.send(JSON.stringify(settings));\r\n      } else if (sharedWebSocket.readyState === WebSocket.CONNECTING) {\r\n        // If the WebSocket is still connecting, wait and retry\r\n        setTimeout(sendSettings, 100);\r\n      } else {\r\n        console.error(\"WebSocket connection not open\");\r\n      }\r\n    };\r\n\r\n    sendSettings(); // Send settings on initial render\r\n\r\n    // Send settings whenever they change\r\n    const timeoutId = setTimeout(() => {\r\n      sendSettings();\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [loss, delay, direction, sharedWebSocket]);\r\n\r\n  return (\r\n    <div className=\"UDPComponent\">\r\n      <h2>\r\n        {direction === \"source\" ? \"Source\" : \"Target\"} Box (Local Port:{\" \"}\r\n        {localPort})\r\n      </h2>\r\n\r\n      <div className=\"UDPComponentSettings\" >\r\n        <h3>Settings:</h3>\r\n        <label>\r\n          Loss:\r\n          <input\r\n            type=\"number\"\r\n            value={loss}\r\n            onChange={(e) => setLoss(parseFloat(e.target.value))}\r\n          />\r\n        </label>\r\n        <label>\r\n          Delay (ms):\r\n          <input\r\n            type=\"number\"\r\n            value={delay}\r\n            onChange={(e) => setDelay(parseInt(e.target.value))}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div >\r\n        <h3>Received Messages:</h3>\r\n        <ol className=\"MessageBox\">\r\n          {messages.map((msg, index) => (\r\n            <li key={index}>{msg}</li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UDPComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}