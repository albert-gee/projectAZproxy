{"ast":null,"code":"var _jsxFileName = \"K:\\\\+main_repo\\\\school\\\\CST_Degree_BScACS\\\\comp7005-Computer_Networks_And_Protocols\\\\workspace\\\\Project-UdpProxyServerWithReact\\\\react-proxy-app\\\\src\\\\Components\\\\UDPComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UDPComponent = ({\n  localPort,\n  proxyHost,\n  proxyPort\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [statistics, setStatistics] = useState({\n    sent: 0,\n    received: 0,\n    lost: 0\n  });\n  const [targetPort, setTargetPort] = useState(50001); // Default target port\n  const [sourcePort, setSourcePort] = useState(50000); // Default source port\n  const [targetIP, setTargetIP] = useState('127.0.0.1'); // Default target IP\n\n  const socket = new WebSocket(`ws://${proxyHost}:${proxyPort}`);\n  useEffect(() => {\n    socket.addEventListener('message', event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'message') {\n        setReceivedMessages(prevMessages => [...prevMessages, data.content]);\n        setStatistics(prevStats => ({\n          ...prevStats,\n          received: prevStats.received + 1\n        }));\n      } else if (data.type === 'packetLoss') {\n        setStatistics(prevStats => ({\n          ...prevStats,\n          lost: prevStats.lost + 1\n        }));\n      }\n    });\n    return () => {\n      socket.close();\n    };\n  }, [socket]);\n  const sendMessage = () => {\n    const packetLoss = Math.random() < 0.2;\n    const data = JSON.stringify({\n      type: 'message',\n      content: message,\n      packetLoss,\n      targetPort,\n      sourcePort,\n      targetIP\n    });\n    socket.send(data);\n    setStatistics(prevStats => ({\n      ...prevStats,\n      sent: prevStats.sent + 1\n    }));\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"UDP Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Local Port: \", localPort]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Target IP:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: targetIP,\n        onChange: e => setTargetIP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Target Port:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: targetPort,\n        onChange: e => setTargetPort(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Source Port:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sourcePort,\n        onChange: e => setSourcePort(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: receivedMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Statistics:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sent: \", statistics.sent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Received: \", statistics.received]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lost: \", statistics.lost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(UDPComponent, \"InRxgfu7Yk4CX+r1MbHJ35nJu3c=\");\n_c = UDPComponent;\nexport default UDPComponent;\nvar _c;\n$RefreshReg$(_c, \"UDPComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UDPComponent","localPort","proxyHost","proxyPort","_s","message","setMessage","receivedMessages","setReceivedMessages","statistics","setStatistics","sent","received","lost","targetPort","setTargetPort","sourcePort","setSourcePort","targetIP","setTargetIP","socket","WebSocket","addEventListener","event","data","JSON","parse","type","prevMessages","content","prevStats","close","sendMessage","packetLoss","Math","random","stringify","send","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["K:/+main_repo/school/CST_Degree_BScACS/comp7005-Computer_Networks_And_Protocols/workspace/Project-UdpProxyServerWithReact/react-proxy-app/src/Components/UDPComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UDPComponent = ({ localPort, proxyHost, proxyPort }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  const [statistics, setStatistics] = useState({ sent: 0, received: 0, lost: 0 });\r\n  const [targetPort, setTargetPort] = useState(50001); // Default target port\r\n  const [sourcePort, setSourcePort] = useState(50000); // Default source port\r\n  const [targetIP, setTargetIP] = useState('127.0.0.1'); // Default target IP\r\n\r\n  const socket = new WebSocket(`ws://${proxyHost}:${proxyPort}`);\r\n\r\n  useEffect(() => {\r\n    socket.addEventListener('message', (event) => {\r\n      const data = JSON.parse(event.data);\r\n\r\n      if (data.type === 'message') {\r\n        setReceivedMessages((prevMessages) => [...prevMessages, data.content]);\r\n        setStatistics((prevStats) => ({ ...prevStats, received: prevStats.received + 1 }));\r\n      } else if (data.type === 'packetLoss') {\r\n        setStatistics((prevStats) => ({ ...prevStats, lost: prevStats.lost + 1 }));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, [socket]);\r\n\r\n  const sendMessage = () => {\r\n    const packetLoss = Math.random() < 0.2;\r\n    const data = JSON.stringify({\r\n      type: 'message',\r\n      content: message,\r\n      packetLoss,\r\n      targetPort,\r\n      sourcePort,\r\n      targetIP,\r\n    });\r\n    socket.send(data);\r\n    setStatistics((prevStats) => ({ ...prevStats, sent: prevStats.sent + 1 }));\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>UDP Component</h2>\r\n      <p>Local Port: {localPort}</p>\r\n      <label>\r\n        Target IP:\r\n        <input type=\"text\" value={targetIP} onChange={(e) => setTargetIP(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Target Port:\r\n        <input type=\"number\" value={targetPort} onChange={(e) => setTargetPort(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Source Port:\r\n        <input type=\"number\" value={sourcePort} onChange={(e) => setSourcePort(e.target.value)} />\r\n      </label>\r\n      <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n      <button onClick={sendMessage}>Send Message</button>\r\n      <div>\r\n        <h3>Received Messages:</h3>\r\n        <ul>\r\n          {receivedMessages.map((msg, index) => (\r\n            <li key={index}>{msg}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Statistics:</h3>\r\n        <p>Sent: {statistics.sent}</p>\r\n        <p>Received: {statistics.received}</p>\r\n        <p>Lost: {statistics.lost}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UDPComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}